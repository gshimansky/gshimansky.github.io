<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Gregory Shimansky blog</title>
    <link>https://gshimansky.github.io/</link>
    <description>Recent content on Gregory Shimansky blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 26 Feb 2019 09:45:10 -0600</lastBuildDate>
    
	<atom:link href="https://gshimansky.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Vagrant Libvirt Plugin Build on Ubuntu</title>
      <link>https://gshimansky.github.io/posts/00002-vagrant-libvirt-plugin-build-on-ubuntu/</link>
      <pubDate>Tue, 26 Feb 2019 09:45:10 -0600</pubDate>
      
      <guid>https://gshimansky.github.io/posts/00002-vagrant-libvirt-plugin-build-on-ubuntu/</guid>
      <description>On modern Ubuntu versions vagrant plugin vagrant-plugin fails to build. It is necessary to specify correct locations of libvirt headers and librarires. Possible solution can be found here:
CONFIGURE_ARGS=&amp;quot;with-libvirt-include=/usr/include/libvirt with-libvirt-lib=/usr/lib64&amp;quot; vagrant plugin install vagrant-libvirt Installing the &#39;vagrant-libvirt&#39; plugin. This can take a few minutes... Building native extensions. This could take a while... Fetching: fog-libvirt-0.5.0.gem (100%) Fetching: vagrant-libvirt-0.0.43.gem (100%) Installed the plugin &#39;vagrant-libvirt (0.0.43)&#39;!  </description>
    </item>
    
    <item>
      <title>How to clone a libvirt VM controlled by Vagrant</title>
      <link>https://gshimansky.github.io/posts/00001-clone-libvirt-vm-controlled-by-vagrant/</link>
      <pubDate>Thu, 30 Aug 2018 10:16:00 -0500</pubDate>
      
      <guid>https://gshimansky.github.io/posts/00001-clone-libvirt-vm-controlled-by-vagrant/</guid>
      <description>Strangely enough, googling about this problem doesn&amp;rsquo;t produce any meaningful results. So here are steps which allow cloning a libvirt VM controlled by Vagrant. Imagine that you have a VM named testvm1 which you want to clone into testvm2.
 Shutdown all VMs with vagrant halt or at least from inside of VM with sudo shutdown -h 0.
 Figure our real VM name with virsh list --all | grep testvm1.</description>
    </item>
    
  </channel>
</rss>